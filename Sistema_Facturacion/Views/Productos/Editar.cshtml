@model Sistema_Facturacion.Models.ViewModel.Producto.MProductoViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Mantenimiento de Productos";
}

<style>




    .checkbox {
        width: 25px;
        height: 25px;
    }

    .input-group {
        display: block;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="row">
        <div class="col-md-12">
            <div class="form-horizontal">
                <fieldset>
                    <legend class="text-center header">Editar Productos</legend>

                    <div class="form-group">

                        <div class="col-md-9 col-xs-offset-3">

                            @Html.LabelFor(model => model.IdCategoriaProducto, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.IdCategoriaProducto, new { htmlAttributes = new { @id = "idCategoria", @class = "form-control", @readonly = true, @style = "display:none" } })
                            @Html.ValidationMessageFor(model => model.IdCategoriaProducto, "", new { @class = "text-danger" })
                            <div class="input-group">

                                @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @id = "categoria", @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                                <button type="button" id="btnCategoria" class="btn btn-link" data-target="#modalCategoria" data-toggle="modal"><i class="bi bi-search"></i></button>
                            </div>
                        </div>
                    </div>



                    <div class="form-group">

                        <div class="col-md-9 col-xs-offset-3">
                            @Html.LabelFor(model => model.IdProveedor, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.IdProveedor, new { htmlAttributes = new { @id = "idProveedor", @class = "form-control", @readonly = true, @style = "display:none" } })
                            @Html.ValidationMessageFor(model => model.IdProveedor, "", new { @class = "text-danger" })

                            <div class="input-group">
                                @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @id = "proveedor", @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                                <button type="button" id="btnProveedor" class="btn btn-link" data-target="#modalProveedor" data-toggle="modal"><i class="bi bi-search"></i></button>
                            </div>

                        </div>
                    </div>


                    <div class="form-group">

                        <div class="col-md-9 col-xs-offset-3">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-9 col-xs-offset-3">
                            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-9 col-xs-offset-3">
                            <div>
                                @Html.LabelFor(model => model.TieneImpuesto, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.TieneImpuesto, new { htmlAttributes = new { @class = "checkbox " } })
                                @Html.ValidationMessageFor(model => model.TieneImpuesto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>



                    <div class="text-center">

                        <button type="submit" class="btn btn-primary "> <span class=" bi bi-save"></span> Guardar</button>
                    </div>

                </fieldset>
            </div>
        </div>
    </div>

}



<!-----------------------------------------------------------------------MODAL -------------------------------------------------------------------------->
<!--Categoria-->
<div class="modal " id="modalCategoria" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="listitem">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <h2 class="modal-title text-center" id="exampleModalLabel"><strong style="color:white">Seleccionar Categoria</strong></h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-striped nowrap table-responsive" id="tablaCategoria" style="width:100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => new Sistema_Facturacion.Models.CategoriaProductos().IdCategoria)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => new Sistema_Facturacion.Models.CategoriaProductos().Categoria)
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in new Sistema_Facturacion.Models.ViewModel.Producto.MProductoViewModel().categoriaList)
                        {
                            <tr>
                                <td></td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IdCategoria)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Categoria)
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>

<!--Proveedor-->
<div class="modal " id="modalProveedor" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="listitem">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <h2 class="modal-title text-center" id="exampleModalLabel"><strong style="color:white">Seleccionar Proveedor</strong></h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <table class="table table-striped nowrap table-responsive" id="tablaProveedor" style="width:100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => new Sistema_Facturacion.Models.Proveedores().IdProveedor)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => new Sistema_Facturacion.Models.Proveedores().RazonSocial)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => new Sistema_Facturacion.Models.Proveedores().IdRepresentante)
                            </th>

                        

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in new Sistema_Facturacion.Models.ViewModel.Producto.MProductoViewModel().proveedorList)
                        {
                            <tr>
                                <td></td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IdProveedor)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.RazonSocial)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.IdRepresentante)
                                </td>

                               
                            </tr>
                        }
                    </tbody>

                </table>

            </div>

        </div>
    </div>
</div>



<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/select/1.4.0/js/dataTables.select.min.js"></script>


<script type="text/javascript">

    $(document).ready(function () {
        $.noConflict(true);
        $('#tablaCategoria').DataTable({
            "info": false,
            "bPaginate": false, //Ocultar paginación
            "ordering": false,
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 0
            }],
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            order: [[1, 'asc']]
        });



        $('#tablaProveedor').DataTable({
            "info": false,
            "bPaginate": false, //Ocultar paginación
            "ordering": false,
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 0
            }],
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            order: [[1, 'asc']]
        });

        var r;

        $('#tablaProveedor tbody').on('click', 'tr', function () {
            resultado = $('#tablaProveedor').DataTable().row(this).data();

            $('#idProveedor').val(resultado[1]);
            $('#proveedor').val(resultado[2]);
            $("#modalProveedor").hide();
            $('.modal-backdrop').remove();

        });

        $('#tablaCategoria tbody').on('click', 'tr', function () {
            resultado = $('#tablaCategoria').DataTable().row(this).data();

            $('#idCategoria').val(resultado[1]);
            $('#categoria').val(resultado[2]);
            $("#modalCategoria").hide();
            $('.modal-backdrop').remove();

        });


    });



</script>
